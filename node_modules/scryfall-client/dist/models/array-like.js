"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
// based on https://javascript.info/extend-natives
var ArrayLike = /** @class */ (function (_super) {
    __extends(ArrayLike, _super);
    function ArrayLike(scryfallObject) {
        var _newTarget = this.constructor;
        var _this = _super.call(this) || this;
        Object.setPrototypeOf(_this, _newTarget.prototype);
        var data = scryfallObject.data;
        _this.push.apply(_this, data);
        return _this;
    }
    Object.defineProperty(ArrayLike, Symbol.species, {
        // built-in methods will use this as the constructor
        // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types
        get: function () {
            return Array;
        },
        enumerable: false,
        configurable: true
    });
    return ArrayLike;
}(Array));
exports.default = ArrayLike;

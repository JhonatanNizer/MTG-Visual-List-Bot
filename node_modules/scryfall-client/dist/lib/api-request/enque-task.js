"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.resetTaskDelayTime = exports.setTaskDelayTime = exports.clearQueue = void 0;
var task_1 = __importDefault(require("./task"));
var DEFAULT_SCRYFALL_DESIGNATED_WAIT_TIME = 100;
var taskCurrentlyInProgress = false;
var queue = [];
var delayTime = DEFAULT_SCRYFALL_DESIGNATED_WAIT_TIME;
function clearQueue() {
    queue = [];
    taskCurrentlyInProgress = false;
}
exports.clearQueue = clearQueue;
function delayForScryfallDesignatedTime() {
    return new Promise(function (resolve) {
        setTimeout(resolve, delayTime);
    });
}
function setTaskDelayTime(time) {
    delayTime = time;
}
exports.setTaskDelayTime = setTaskDelayTime;
function resetTaskDelayTime() {
    delayTime = DEFAULT_SCRYFALL_DESIGNATED_WAIT_TIME;
}
exports.resetTaskDelayTime = resetTaskDelayTime;
function checkForEnquedTasks(recursiveCheck) {
    if (queue.length > 0) {
        var nextTask_1 = queue.shift();
        if (!nextTask_1) {
            taskCurrentlyInProgress = false;
            return;
        }
        delayForScryfallDesignatedTime().then(function () {
            taskCurrentlyInProgress = true;
            nextTask_1.start().then(function () {
                checkForEnquedTasks();
            });
        });
    }
    else if (recursiveCheck) {
        taskCurrentlyInProgress = false;
    }
    else {
        delayForScryfallDesignatedTime().then(function () {
            checkForEnquedTasks(true);
        });
    }
}
function enqueTask(task) {
    var handler = new task_1.default(task);
    if (!taskCurrentlyInProgress) {
        taskCurrentlyInProgress = true;
        handler.start().then(function () {
            checkForEnquedTasks();
        });
    }
    else {
        queue.push(handler);
    }
    return handler.getPromise();
}
exports.default = enqueTask;
